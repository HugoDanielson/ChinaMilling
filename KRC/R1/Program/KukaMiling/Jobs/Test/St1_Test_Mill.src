&ACCESS RVP
&REL 5
DEF  St1_Test_Mill (lnActSt :IN)
   INT lnActSt,lnUsedBase,lnUsedTool
   INT lnJobNr

   
   ;FOLD INIT
      CONTINUE
      IF ($T1 OR $T2)THEN
         GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
         INTERRUPT ON 3
         BAS (#INITMOV,0)
         lnActSt = 2
         PTP $POS_ACT
      ENDIF
      
      PTP XHOME
      
     ; Used Base and tool
      lnUsedBase = 11
      lnUsedTool = 11
      gnLastToolNr = 3
      
      
      gfMillingOffset = $NULLFRAME
      gfMillingOffset.Z = -(grCuttingDepth*(gnMillingCounter-1))
      
      BASE_DATA[lnUsedBase] = BASE_DATA[16]:gfBaseShift[lnActSt];:gfMillingOffset
      TOOL_DATA[lnUsedTool] = TOOL_DATA[4] :{X 0,Y 0,Z 0,A 0,B 0,C 0}
      grUsedRPM = GetMillingRPM(grTool_VC[gnLastToolNr], grTool_Diameter[gnLastToolNr])
      grUsedMillingSpeed = GetMillingSpeed(grUsedRPM, grTool_ToothCount[gnLastToolNr], grTool_FeedPerTooth[gnLastToolNr])
   ;ENDFOLD
   ;MoveSettings (nBase: IN, nTool: IN, nAcc: IN, nVel : IN )
   
   
   SpindleRun(grUsedRPM,#CLOCKWISE)
   WAIT SEC 10
   
   MoveSettings(lnUsedBase, lnUsedTool, 100, 500)   
   PTP lfPrePos[1] C_PTP 
   MoveSettings(lnUsedBase, lnUsedTool, 100, 200)   
   LIN lfPrePos[2] C_DIS
   
   
   MoveSettings(lnUsedBase, lnUsedTool, 100, grUsedMillingSpeed)   
   LIN lfWorkPos[1] C_DIS
   
   LIN lfWorkPos[2] 
   
   LIN lfWorkPos[3]
   
   LIN lfWorkPos[4]
   
   LIN lfWorkPos[5]
   
   LIN lfWorkPos[6]
   
   LIN lfWorkPos[7]
   
   LIN lfWorkPos[8]
   
   LIN lfWorkPos[9] 
   
   
   MoveSettings(lnUsedBase, lnUsedTool, 100, 20)
   
   WAIT SEC 0
   
   SpindleStop( )
   LIN lfWorkPos[10]
   
   WAIT SEC 0
   
  MoveSettings(lnUsedBase, lnUsedTool, 100, 2000)
  
   PTP XHOME
  
  


   
END

DEF endOfJob()
   gbJob1StartedSt[1] = FALSE
   gbJob1DoneSt[1]    = TRUE
   gnMillingCounter = gnMillingCounter+1
END