&ACCESS RVEO
&REL 38
&PARAM DISKPATH = KRC:\R1\Program\Milling
DEF Wood_Test_2 ( )
   INT lnActSt,lnUsedBase,lnActBase,lnUsedTool,lnBaseNr
   INT lnJobNr, lnCounter,lnCounter2
   FRAME lfZcut
   FRAME lfToolDiamShift
   FRAME lfStartMillingPos
   FRAME lfBaseShift
   FRAME lfBaseCycleZ
   FRAME lfBaseCycleShift
   
   CONTINUE     
   ;IF ($T1 OR $T2)THEN
   GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
   INTERRUPT ON 3
   BAS (#INITMOV,0)
   lnActSt = 1
   PTP $POS_ACT
   PTP lAstartPos
   
   gbRobControlActive = FALSE
   
   ; Used Base and tool
   lnUsedBase = 11
   lnActBase = 12
   lnUsedTool = 11
   
   gnLastToolNr = 5
   lnBaseNr = 23
   
   gfMillingOffset = $NULLFRAME
   
   lfZcut = $NULLFRAME
   lfZcut.Z = 0
   lfBaseShift = {X -30,Y -10,Z 1.1,A 0,B 0,C 0}   
   lfBaseCycleZ = $NULLFRAME
   lfBaseCycleZ.Z = 0
   
   ;*************************************************************
   ;*                      Mill TOP SURFACE                     *
   ;*************************************************************
   grUsedRPM = GetMillingRPM(grTool_VC[gnLastToolNr], grTool_Diameter[gnLastToolNr])
   grUsedMillingSpeed = GetMillingSpeed(grUsedRPM, grTool_ToothCount[gnLastToolNr], grTool_FeedPerTooth[gnLastToolNr])
   
   SpindleRun(grUsedRPM,#CLOCKWISE)
   
   lfBaseCycleZ = $NULLFRAME
   lfBaseCycleZ.Z = 0
   BASE_DATA[lnUsedBase] = BASE_DATA[lnBaseNr] : lfBaseShift : lfBaseCycleZ
   TOOL_DATA[lnUsedTool] = TOOL_DATA[gnLastToolNr] :{X 0,Y 0,Z 0,A 270,B 0,C 0}
   
   MoveSettings(lnUsedBase, lnUsedTool, 100, grUsedMillingSpeed)
   ;; Move To PreposMillingPos Point P1 {5mm far from WP surface}
   lfToolDiamShift   = $NULLFRAME   
   lfToolDiamShift.X = 0
   lfToolDiamShift.Y = 0
   lfToolDiamShift.Z = 5
   lfStartMillingPos = lfWorkPos[1] : lfToolDiamShift 
   LIN lfStartMillingPos
   
   lfBaseCycleShift = $NULLFRAME
   BASE_DATA[lnActBase] = BASE_DATA[lnUsedBase]
   FOR lnCounter = 1 TO 2
      
      FOR lnCounter2 = 1 TO 2
         SWITCH lnCounter2
            CASE 1
               grUsedRPM = GetMillingRPM(grTool_VC[gnLastToolNr], grTool_Diameter[gnLastToolNr])
               grUsedMillingSpeed = GetMillingSpeed(grUsedRPM, grTool_ToothCount[gnLastToolNr], grTool_FeedPerTooth[gnLastToolNr])
            CASE 2
               grUsedRPM = GetMillingRPM(grTool_VC[gnLastToolNr], grTool_Diameter[gnLastToolNr])*1.5
               grUsedMillingSpeed = GetMillingSpeed(grUsedRPM, grTool_ToothCount[gnLastToolNr], grTool_FeedPerTooth[gnLastToolNr])/1.5
         ENDSWITCH     
         SpindleRun(grUsedRPM,#CLOCKWISE)
         ;; Move To Milling Point P1
         MoveSettings(lnActBase, lnUsedTool, 100, grUsedMillingSpeed)
         lfToolDiamShift   =   $NULLFRAME   
         lfToolDiamShift.x =  0
         lfToolDiamShift.Y =  0
         lfToolDiamShift.Z =   - (0.1 *lnCounter)
         LIN lfWorkPos[1]:lfToolDiamShift C_VEL
         
         ;; Move To Milling Point P2
         MoveSettings(lnActBase, lnUsedTool, 100, grUsedMillingSpeed)
         lfToolDiamShift   =   $NULLFRAME   
         lfToolDiamShift.x =  0
         lfToolDiamShift.Y =  0
         lfToolDiamShift.Z =   - (0.1 *lnCounter)
         LIN lfWorkPos[2]:lfToolDiamShift C_VEL
         
         ;; Move To Milling Point P2
         MoveSettings(lnActBase, lnUsedTool, 100, grUsedMillingSpeed)
         lfToolDiamShift   =   $NULLFRAME   
         lfToolDiamShift.x =  grTool_Diameter[gnLastToolNr] -1;* 2
         lfToolDiamShift.Y =  0
         lfToolDiamShift.Z =   - (0.1 *lnCounter)
         LIN lfWorkPos[2]:lfToolDiamShift C_VEL
         
         ;; Move To Milling Point P1
         MoveSettings(lnActBase, lnUsedTool, 100, grUsedMillingSpeed)
         lfToolDiamShift   =   $NULLFRAME   
         lfToolDiamShift.x =  grTool_Diameter[gnLastToolNr] -1 ;* 2
         lfToolDiamShift.Y =  0
         lfToolDiamShift.Z =  - (0.1 *lnCounter)
         LIN lfWorkPos[1]:lfToolDiamShift C_VEL
         
         lfBaseCycleShift.X = lfBaseCycleShift.X +(grTool_Diameter[gnLastToolNr] * 2 )-1
         BASE_DATA[lnActBase] = BASE_DATA[lnUsedBase] : lfBaseCycleShift
      ENDFOR
      LIN_REL {Z 5} C_VEL #TOOL 
      lfBaseCycleShift = $NULLFRAME
      lfBaseCycleShift.X = 0
      BASE_DATA[lnActBase] = BASE_DATA[lnUsedBase]
      MoveSettings(lnActBase, lnUsedTool, 100, grUsedMillingSpeed)
      ;; Move To PreposMillingPos Point P1 {5mm far from WP surface}
      lfToolDiamShift   = $NULLFRAME   
      lfToolDiamShift.X = 0
      lfToolDiamShift.Y = 0
      lfToolDiamShift.Z = 5
      lfStartMillingPos = lfWorkPos[1] : lfToolDiamShift 
      LIN lfStartMillingPos
      
   ENDFOR
   
   MoveSettings(lnUsedBase, lnUsedTool, 100, 500)   
   ;; End of Milling Move Out of the WP
   TRIGGER WHEN DISTANCE=1 DELAY=0 DO  SpindleSetSpeed(50) PRIO=-1 
   LIN_REL {Z 5} C_VEL #TOOL 
   
   LIN_REL {Z 100} C_VEL #BASE
   
   TOOL_DATA[lnUsedTool] = TOOL_DATA[gnLastToolNr] :{X 0,Y 0,Z 0,A 180,B 90,C -90}
   MoveSettings(lnUsedBase, lnUsedTool, 100, 500)  
   PTP lastartpos C_PTP    
   
   WAIT SEC 1
   SpindleStop() 
   
END