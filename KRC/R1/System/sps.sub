&ACCESS RVP
&REL 4
&COMMENT PLC on control
DEF  SPS ( )
   ;FOLD DECLARATIONS
      ;FOLD BASISTECH DECL
         ;Automatik extern
         DECL STATE_T STAT
         DECL MODUS_T MODE
      ;ENDFOLD (BASISTECH DECL)
      ;FOLD USER DECL
         ; Please insert user defined declarations
         DECL CHAR BUFF[4]
      ;ENDFOLD (USER DECL)
   ;ENDFOLD (DECLARATIONS)
   ;FOLD INI
      ;FOLD AUTOEXT INIT
         INTERRUPT DECL 91 WHEN $PRO_STATE1==#P_FREE DO RESET_OUT ()
         INTERRUPT ON 91
         INTERRUPT DECL 92 WHEN $PRO_MOVE==TRUE DO RESET_LINESEL()
         INTERRUPT ON 92
         $LOOP_MSG[]="                                                            "
         MODE=#SYNC
         $H_POS=$H_POS
         ;Automatik extern
         IF $MODE_OP==#EX THEN
            CWRITE($CMD,STAT,MODE,"RUN /R1/CELL()")
         ENDIF
      ;ENDFOLD (AUTOEXT INIT)
      ;FOLD BACKUPMANAGER PLC INIT
         BM_ENABLED = FALSE
         BM_OUTPUTVALUE = 0
      ;ENDFOLD (BACKUPMANAGER PLC INIT)
      ;FOLD USER INIT
         ; Please insert user defined initialization commands
         
      ;ENDFOLD (USER INIT)
   ;ENDFOLD (INI)
   
   LOOP
      WAIT FOR NOT($POWER_FAIL)
      ;FOLD BASISTECH PLC
         BasisTech_PLC_LOOP()
      ;ENDFOLD (BASISTECH PLC)
      ;FOLD BACKUPMANAGER PLC
         IF BM_ENABLED THEN
            BM_OUTPUTSIGNAL = BM_OUTPUTVALUE
         ENDIF
      ;ENDFOLD (BACKUPMANAGER PLC)
;START AUTOGENERATED -- DO NOT CHANGE -- R2MillingInlineForm sps sps_sub.add Insert ready2_Milling SUB
;FOLD ready2_Milling SUB
;=====================================================
R2M_ChkSpindleSpeed()
;=====================================================
;ENDFOLD (ready2_Milling SUB)
;END AUTOGENERATED -- DO NOT CHANGE -- (R2MillingInlineForm sps sps_sub.add Insert ready2_Milling SUB)
      ;FOLD USER PLC
         ;Make your modifications here
         ;CAST_FROM(BUFF[], 0, tvel_usr)
         ;CAST_TO(BUFF[], 0, t_vel)
         ;t_vel = t_vel1
         ;PokeOutputs(601, 16, tvel_usr)
      ;ENDFOLD (USER PLC)
      ;FOLD ;%{H}
         ;IF $out[12]==false THEN
            ;OP_MD=2
            ;if CW==126 then
               ;
               ;$TIMER_STOP[20] = FALSE
               ;if $timer[20]>500 then
                  ;cw =127
               ;endif
            ;endif
         ;ENDIF
         ;if $out[12]==true then
            ;cw=126
            ;$timer[20]=0 
            ;$TIMER_STOP[20] =TRUE
            ;T_VEL=0
         ;endif
         ;if T_VEL*(-1)<0 then
            ;T_VEL_C=T_VEL/(-10)+65536
         ;else
            ;T_VEL_C=T_VEL/(-10)
         ;ENDIF
   ENDLOOP
   
   ;FOLD
      END
   ;ENDFOLD
   
   DEF  RESET_OUT ( )
      INT N
      MsgLoop(" ")
      IF REFLECT_PROG_NR == 1 THEN
         FOR N = 0 TO PGNO_LENGTH - 1
            $OUT[PGNO_FBIT_REFL + N] = FALSE
         ENDFOR
      ENDIF
      IF (PGNO_REQ>0) THEN
         $OUT[PGNO_REQ]=FALSE
      ELSE
         IF (PGNO_REQ<0) THEN
            $OUT[-PGNO_REQ]=TRUE
         ENDIF
      ENDIF
   END
   
   DEF RESET_LINESEL()
      $LINE_SEL_OK=FALSE
   END
   
   ;FOLD USER SUBROUTINE
      ; Integrate your user defined subroutines
      
   ;ENDFOLD (USER SUBROUTINE)
      ;ENDFOLD
      
